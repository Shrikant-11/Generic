services:
  service-registry:
    image: devwithsmile/generic-discovery-server:latest
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
 

  api-gateway:
    image: devwithsmile/generic-api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=api-gateway
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
    depends_on:
      - service-registry
    networks:
      - microservices-network

  authorization-service:
    image: devwithsmile/generic-authorization-service:latest
    container_name: authorization-service
    ports:
      - "9999:9999"
    environment:
      - SERVER_PORT=9999
      - SPRING_APPLICATION_NAME=authorization-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=@dmin@123
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
    depends_on:
      - service-registry
      - postgres
    networks:
      - microservices-network

  user-service:
    image: devwithsmile/generic-user-service:latest
    container_name: user-service
    ports:
      - "8082:8082"
    environment:
      - SERVER_PORT=8082
      - SPRING_APPLICATION_NAME=user-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=@dmin@123
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
    depends_on:
      - service-registry
      - postgres
    networks:
      - microservices-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "@dmin@123"
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
